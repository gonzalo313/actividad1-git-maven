
cd my-automation-project git init

git clone https://github.com/gonzalo313/actividad1-git-maven.git
cd proyecto

git config --global user.name "Gonzalo"
git config --global user.email "g_maldonado_o@hotmail.com"
git checkout -b develop

mvn archetype:generate
DgroupId=com.mycompany.myproject
DartifactId=my-automation-project
DarchetypeArtifactId=mycompany ven-archetype-quickstart
DinteractiveMode=false

mvn clean install     # Compila, corre tests y empaqueta
mvn test              # Solo pruebas
mvn package           # Genera el .jar o .war


- name: Build
  run: mvn clean package -DskipTests

  - name: Run Tests
  run: mvn test

  name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Compilar y correr pruebas
        run: mvn clean verify

  deploy:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Construir imagen Docker
        run: docker build -t usuario/proyecto:${{ github.sha }} .

      - name: Publicar en DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push usuario/proyecto:${{ github.sha }}

          